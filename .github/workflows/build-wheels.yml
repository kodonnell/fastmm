name: Build Wheels

on:
  push:
    branches: [ main, refactor ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, refactor ]
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12', '3.13', '3.14']

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for proper versioning

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Python build tools
        run: |
          python -m pip install --upgrade pip
          pip install build wheel setuptools setuptools-scm

      - name: Cache vcpkg
        uses: actions/cache@v3
        with:
          path: C:\vcpkg\installed
          key: ${{ runner.os }}-vcpkg-boost-${{ matrix.python-version }}
          restore-keys: |
            ${{ runner.os }}-vcpkg-boost-

      - name: Install Boost (Windows)
        if: runner.os == 'Windows'
        run: |
          # Install only what we need:
          # - boost-geometry (header-only, for spatial indexing)
          # - boost-serialization (compiled library, for UBODT serialization)
          vcpkg install boost-geometry:x64-windows boost-serialization:x64-windows
          echo "BOOST_ROOT=$env:VCPKG_INSTALLATION_ROOT\installed\x64-windows" >> $env:GITHUB_ENV
          echo "Boost_INCLUDE_DIR=$env:VCPKG_INSTALLATION_ROOT\installed\x64-windows\include" >> $env:GITHUB_ENV

      - name: Build wheel using build script
        if: runner.os == 'Windows'
        run: |
          .\build_wheel.ps1

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-py${{ matrix.python-version }}
          path: dist/*.whl

  publish:
    name: Publish to PyPI
    needs: [build_wheels]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')

    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist/
          pattern: wheels-*
          merge-multiple: true

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
